trigger: none

variables:
  - group: test-apk_secret

parameters:
  - name: annotation_suite
    displayName: Select mission to test
    type: string
    default: 'pr_review'
    values:
      - smoke
      - pr_review
      - missions
  - name: Environment
    displayName: Select the execution environment
    type: string
    default: 'stg'
    values:
      - qa
      - stg
  - name: device_suite
    displayName: Select device to execute
    type: string
    default: 'ipad_pro_12.9_os_16'
    values:
      - ipad_pro_12.9_os_16
      - iphone_14_plus_os_16
  - name: PublishArtifact
    displayName: Download and Publish artifact
    type: boolean
    default: 'false'
    values:
      - true
      - false

name: StaffApp-mobile-tests-${{ parameters.platform }}-execution

pool:
  vmImage: 'ubuntu-latest'

steps:
  - script: |
      echo "##vso[task.setvariable variable=slackMessage;]Deploy for service *${BUILD_DEFINITIONNAME}* is starting requested by ${BUILD_REQUESTEDFOR} \n*PR*: ${BUILD_SOURCEVERSIONMESSAGE}"
    displayName: 'Collected results'

  - task: PowerShell@2
    inputs:
      filePath: './devops/notification.ps1'
    env:
      slackMessage: $(slackMessage)
      Slack_WebHook: $(Slack_WebHook1)
      status: "initial"
    displayName: 'Slack Message'

  - ${{ if eq(parameters.PublishArtifact, true) }}:
      - task: DownloadPipelineArtifact@2
        displayName: 'DownloadPipelineArtifact iOS'
        inputs:
          buildType: 'specific'
          project: 'FanApp'
          branchName: 'develop'
          definition: '251'
          buildVersionToDownload: 'specific'
          pipelineId: '40102'
          artifactName: 'app'
          targetPath: '$(Pipeline.Workspace)'
      - script: |
          applicationPath="$(Pipeline.Workspace)/**/**.ipa"
          curl -u "$(BS_USERNAME):$(BS_PASSWORD)" -v \
          -X POST "https://api-cloud.browserstack.com/app-automate/upload" \
          -F "file=@${applicationPath}" \
          -F "custom_id=StaffAppIosLts"
        displayName: 'Upload iOS Artifact to BrowserStack'

  - task: JavaToolInstaller@0
    inputs:
      versionSpec: '17'
      jdkArchitectureOption: 'x64'
      jdkSourceOption: 'PreInstalled'

  - task: NodeTool@0
    inputs:
      versionSource: 'spec'
      versionSpec: '10.x'
    displayName: 'Install Nodejs'

  - script: |
      mvn install -DskipTests
    displayName: 'mvn install'

  - script: |
      cd lac-test
      mvn clean test -DsuiteXmlFiles=staffapp/${{parameters.device_suite}}.xml -Dframework.mobile.app.version=TBD -Denvironment=${{parameters.Environment}} -Dcucumber.filter.tags="@${{parameters.annotation_suite}}"
    continueOnError: true
    displayName: 'Run Tests'

  - task: DownloadPipelineArtifact@2
    inputs:
      buildType: 'specific'
      project: 'f989e8df-6bbf-44cc-af3e-43a80cc02b9a'
      pipeline: '270'
      buildVersionToDownload: 'latestFromBranch'
      branchName: $(Build.SourceBranch)
      allowPartiallySucceededBuilds: true
      tags: '${{parameters.platform}}-${{parameters.annotation_suite}}'
      artifactName: 'allure-history'
      targetPath: '$(System.DefaultWorkingDirectory)/lac-test/allure-results/history'
    displayName: 'Download Allure History'
    continueOnError: true

  - script: |
      npm install -g allure-commandline --save-dev
      npx allure generate $(System.DefaultWorkingDirectory)/lac-test/allure-results -o $(System.DefaultWorkingDirectory)/lac-test/allure-web --clean
    continueOnError: true
    displayName: 'Allure Generate Report'

  - task: MichaelClay.azure-pipelines-allure-report-viewer.PublishAllureReport.PublishAllureReport@1
    inputs:
      reportDir: lac-test/allure-web
    displayName: 'Publish Allure Report'

  - publish: $(System.DefaultWorkingDirectory)/lac-test/allure-web/history
    artifact: allure-history
    displayName: 'Publish Allure History'

  - task: PowerShell@2
    displayName: 'Add Build Tag'
    inputs:
      targetType: 'inline'
      script: 'Write-Host "##vso[build.addbuildtag]${{parameters.platform}}-${{parameters.annotation_suite}}"'

  - script: |
      cd lac-test/allure-web/widgets
      summary=$(<summary.json jq -r '.statistic')
      more_info="<https://dev.azure.com/IntuitDome/${SYSTEM_TEAMPROJECT}/_build/results?buildId=${BUILD_BUILDID} |${BUILD_BUILDNUMBER}>"
      total=$(jq -r '.total' <<<"$summary")
      echo "##vso[task.setvariable variable=slackMessage;]Automated test executed from branch *${BUILD_SOURCEBRANCHNAME}* and platform iOS. \n*More info:* '$more_info' $total cases executed. \n*Results* \n:check-failed:*Failed*: $(jq -r '.failed' <<<"$summary") :construction:*Broken*: $(jq -r '.broken' <<<"$summary") :jenkins-yellow:*Skipped*: $(jq -r '.skipped' <<<"$summary") :check-passed:*Passed*: $(jq -r '.passed' <<<"$summary") :gear:*Unknown*: $(jq -r '.unknown' <<<"$summary")"
    displayName: 'Collected results'

  - task: PowerShell@2
    inputs:
      filePath: './devops/notification.ps1'
    env:
      slackMessage: $(slackMessage)
      Slack_WebHook: $(Slack_WebHook1)
      status: "final"
    displayName: 'Slack Message'
