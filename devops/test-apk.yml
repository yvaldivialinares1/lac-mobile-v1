name: mobile-tests-android

trigger:
  branches:
    include:
      - develop

variables:
  - group: test-apk_secret

parameters:
  - name: annotation_suite
    displayName: Select mission to test
    type: string
    default: pr_review
    values:
      - loginSuccess
      - smoke
      - r1_smoke
      - r2_smoke
      - r1_all
      - r2_all
      - minor_adult_user
      - young_adult_user
      - adult_user
      - data_creation
      - regression
      - pr_review
      - missions
  - name: device_suite
    displayName: Select device to execute
    type: string
    default: pixel_7_os_13
    values:
      - pixel_7_os_13
      - samsung_s20_os_10
      - samsung_s20_plus_os_9
  - name: Environment
    displayName: Select the execution environment
    type: string
    default: stg
    values:
      - qa
      - stg
  - name: PublishArtifact
    displayName: Download and Publish artifact
    type: boolean
    default: true
    values:
      - true
      - false

resources:
  pipelines:
  - pipeline: AndroidPipeline
    project: FanApp
    source: Android
    trigger:
      branches:
        include:
          - main

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: |
    echo "##vso[task.setvariable variable=slackMessage;]Deploy for service *${BUILD_DEFINITIONNAME}* is starting requested by ${BUILD_REQUESTEDFOR} \n*PR*: ${BUILD_SOURCEVERSIONMESSAGE}"
  displayName: 'Collected results'

- task: PowerShell@2
  inputs:
    filePath: './devops/notification.ps1'
  env:
      slackMessage: $(slackMessage)
      Slack_WebHook: $(Slack_WebHook1)
      status: "initial"
  displayName: 'Slack Message'

- task: DownloadPipelineArtifact@2
  condition: and(succeeded(), eq(variables['${{parameters.PublishArtifact}}'], true))
  inputs:
    buildType: 'specific'
    project: 'FanApp'
    branchName: 'develop'
    definition: '251'
    buildVersionToDownload: 'specific'
    pipelineId: '40102'
    artifactName: 'apk'
    targetPath: '$(Pipeline.Workspace)'
- task: JavaToolInstaller@0
  inputs:
    versionSpec: '17'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'PreInstalled'

- script: |
    curl -u "$(BS_USERNAME):$(BS_PASSWORD)" -v \
    -X POST "https://api-cloud.browserstack.com/app-automate/upload" \
    -F "file=@$(Pipeline.Workspace)/app/build/outputs/clippersQa/debug/app-clippersQa-debug.apk" \
    -F "custom_id=LaClippersAndroidLts"
  displayName: 'Upload APK to BrowserStack'
  condition: and(succeeded(), eq(variables['${{parameters.PublishArtifact}}'], true))

- script: |
    mvn install -DskipTests
  displayName: install mvn

- task: NodeTool@0
  inputs:
    versionSource: 'spec'
    versionSpec: '10.x'
  displayName: 'Install Nodejs'

- script: |
    cd lac-test
    mvn clean test -DsuiteXmlFiles=fanapp/${{parameters.device_suite}}.xml -Dframework.mobile.app.version=TBD -Denvironment=${{parameters.Environment}} -Dcucumber.filter.tags="@${{parameters.annotation_suite}}"
    npm install -g allure-commandline --save-dev
    npx allure generate allure-results -o allure-web
  continueOnError: true
  displayName: 'Run Tests'

- task: PublishAllureReport@1
  inputs:
    reportDir: lac-test/allure-web
  displayName: 'Publish Allure Report'

- script: |
    cd lac-test/allure-web/widgets
    summary=$(<summary.json jq -r '.statistic')
    more_info="<https://dev.azure.com/IntuitDome/${SYSTEM_TEAMPROJECT}/_build/results?buildId=${BUILD_BUILDID} |${BUILD_BUILDNUMBER}>"
    total=$(jq -r '.total' <<<"$summary")
    echo "##vso[task.setvariable variable=slackMessage;]Automated test executed from branch *${BUILD_SOURCEBRANCHNAME}* and platform Android. \n*More info:* '$more_info' $total cases executed. \n*Results* \n:check-failed:*Failed*: $(jq -r '.failed' <<<"$summary") :construction:*Broken*: $(jq -r '.broken' <<<"$summary") :jenkins-yellow:*Skipped*: $(jq -r '.skipped' <<<"$summary") :check-passed:*Passed*: $(jq -r '.passed' <<<"$summary") :gear:*Unknown*: $(jq -r '.unknown' <<<"$summary")"
  displayName: 'Collected results'

- task: PowerShell@2
  inputs:
    filePath: './devops/notification.ps1'
  env:
      slackMessage: $(slackMessage)
      Slack_WebHook: $(Slack_WebHook1)
      status: "final"
  displayName: 'Slack Message'
